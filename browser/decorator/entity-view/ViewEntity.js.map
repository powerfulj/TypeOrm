{"version":3,"sources":["../browser/src/decorator/entity-view/ViewEntity.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,QAAQ,CAAC;AAgB9C;;;GAGG;AACH,MAAM,UAAU,UAAU,CAAC,aAAwC,EAAE,YAAgC;IACjG,IAAM,OAAO,GAAG,CAAC,OAAO,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAkC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC9G,IAAM,IAAI,GAAG,OAAO,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;IAE9E,OAAO,UAAU,MAAgB;QAC7B,sBAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACjC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;YACzD,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;SACjC,CAAC,CAAC;IAC5B,CAAC,CAAC;AACN,CAAC","file":"ViewEntity.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../\";\r\nimport {TableMetadataArgs} from \"../../metadata-args/TableMetadataArgs\";\r\nimport {ViewEntityOptions} from \"../options/ViewEntityOptions\";\r\n\r\n/**\r\n * This decorator is used to mark classes that will be an entity view.\r\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\r\n */\r\nexport function ViewEntity(options?: ViewEntityOptions): Function;\r\n\r\n/**\r\n * This decorator is used to mark classes that will be an entity view.\r\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\r\n */\r\nexport function ViewEntity(name?: string, options?: ViewEntityOptions): Function;\r\n\r\n/**\r\n * This decorator is used to mark classes that will be an entity view.\r\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\r\n */\r\nexport function ViewEntity(nameOrOptions?: string|ViewEntityOptions, maybeOptions?: ViewEntityOptions): Function {\r\n    const options = (typeof nameOrOptions === \"object\" ? nameOrOptions as ViewEntityOptions : maybeOptions) || {};\r\n    const name = typeof nameOrOptions === \"string\" ? nameOrOptions : options.name;\r\n\r\n    return function (target: Function) {\r\n        getMetadataArgsStorage().tables.push({\r\n            target: target,\r\n            name: name,\r\n            expression: options.expression,\r\n            type: \"view\",\r\n            database: options.database ? options.database : undefined,\r\n            schema: options.schema ? options.schema : undefined,\r\n        } as TableMetadataArgs);\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}