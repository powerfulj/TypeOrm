{"version":3,"sources":["../browser/src/driver/DriverFactory.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,kBAAkB,EAAC,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EAAC,eAAe,EAAC,MAAM,+BAA+B,CAAC;AAC9D,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAC,eAAe,EAAC,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAC,YAAY,EAAC,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAC,YAAY,EAAC,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAC,aAAa,EAAC,MAAM,yBAAyB,CAAC;AACtD,OAAO,EAAC,iBAAiB,EAAC,MAAM,kCAAkC,CAAC;AACnE,OAAO,EAAC,kBAAkB,EAAC,MAAM,mCAAmC,CAAC;AACrE,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAC,cAAc,EAAC,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAC,UAAU,EAAC,MAAM,mBAAmB,CAAC;AAI7C;;GAEG;AACH;IAAA;IAuCA,CAAC;IArCG;;OAEG;IACH,8BAAM,GAAN,UAAO,UAAsB;QAClB,IAAA,8BAAI,CAAuB;QAClC,QAAQ,IAAI,EAAE;YACV,KAAK,OAAO;gBACR,OAAO,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC;YACvC,KAAK,UAAU;gBACX,OAAO,IAAI,cAAc,CAAC,UAAU,CAAC,CAAC;YAC1C,KAAK,aAAa;gBACd,OAAO,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAK,SAAS;gBACV,OAAO,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC;YACvC,KAAK,QAAQ;gBACT,OAAO,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;YACxC,KAAK,SAAS;gBACV,OAAO,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC;YACzC,KAAK,cAAc;gBACf,OAAO,IAAI,kBAAkB,CAAC,UAAU,CAAC,CAAC;YAC9C,KAAK,cAAc;gBACf,OAAO,IAAI,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAC7C,KAAK,OAAO;gBACR,OAAO,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC;YACvC,KAAK,QAAQ;gBACT,OAAO,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;YACxC,KAAK,OAAO;gBACR,OAAO,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAK,SAAS;gBACV,OAAO,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC;YACvC,KAAK,MAAM;gBACP,OAAO,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;YACtC;gBACI,MAAM,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;SAC1C;IACL,CAAC;IAEL,oBAAC;AAAD,CAvCA,AAuCC,IAAA","file":"DriverFactory.js","sourcesContent":["import {MissingDriverError} from \"../error/MissingDriverError\";\r\nimport {CockroachDriver} from \"./cockroachdb/CockroachDriver\";\r\nimport {MongoDriver} from \"./mongodb/MongoDriver\";\r\nimport {SqlServerDriver} from \"./sqlserver/SqlServerDriver\";\r\nimport {OracleDriver} from \"./oracle/OracleDriver\";\r\nimport {SqliteDriver} from \"./sqlite/SqliteDriver\";\r\nimport {CordovaDriver} from \"./cordova/CordovaDriver\";\r\nimport {ReactNativeDriver} from \"./react-native/ReactNativeDriver\";\r\nimport {NativescriptDriver} from \"./nativescript/NativescriptDriver\";\r\nimport {SqljsDriver} from \"./sqljs/SqljsDriver\";\r\nimport {MysqlDriver} from \"./mysql/MysqlDriver\";\r\nimport {PostgresDriver} from \"./postgres/PostgresDriver\";\r\nimport {ExpoDriver} from \"./expo/ExpoDriver\";\r\nimport {Driver} from \"./Driver\";\r\nimport {Connection} from \"../connection/Connection\";\r\n\r\n/**\r\n * Helps to create drivers.\r\n */\r\nexport class DriverFactory {\r\n\r\n    /**\r\n     * Creates a new driver depend on a given connection's driver type.\r\n     */\r\n    create(connection: Connection): Driver {\r\n        const {type} = connection.options;\r\n        switch (type) {\r\n            case \"mysql\":\r\n                return new MysqlDriver(connection);\r\n            case \"postgres\":\r\n                return new PostgresDriver(connection);\r\n            case \"cockroachdb\":\r\n                return new CockroachDriver(connection);\r\n            case \"mariadb\":\r\n                return new MysqlDriver(connection);\r\n            case \"sqlite\":\r\n                return new SqliteDriver(connection);\r\n            case \"cordova\":\r\n                return new CordovaDriver(connection);\r\n            case \"nativescript\":\r\n                return new NativescriptDriver(connection);\r\n            case \"react-native\":\r\n                return new ReactNativeDriver(connection);\r\n            case \"sqljs\":\r\n                return new SqljsDriver(connection);\r\n            case \"oracle\":\r\n                return new OracleDriver(connection);\r\n            case \"mssql\":\r\n                return new SqlServerDriver(connection);\r\n            case \"mongodb\":\r\n                return new MongoDriver(connection);\r\n            case \"expo\":\r\n                return new ExpoDriver(connection);\r\n            default:\r\n                throw new MissingDriverError(type);\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":".."}